name: Pull Request
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      [
        "**/*.jsonc",
        "**/*.json",
        "**/*.yml",
        "**/*.md",
        "bash/**/*.bats",
        "bash/**/*.bash",
        "Cargo.toml",
        "rust/**/*.rs",
        "rust/**/*.toml",
      ]
  push:
    branches: [main]
    paths:
      [
        "**/*.jsonc",
        "**/*.json",
        "**/*.yml",
        "**/*.md",
        "bash/**/*.bats",
        "bash/**/*.bash",
        "Cargo.toml",
        "rust/**/*.rs",
        "rust/**/*.toml",
      ]

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_all_changed_files }}
      bash_any_changed: ${{ steps.changed-files.outputs.bash_any_changed }}
      rs_any_changed: ${{ steps.changed-files.outputs.rs_any_changed}}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          files_yaml: |
            all:
              - '**/*'
            bash:
              - bash/**/*.bash
              - bash/**/*.bats
            rs:
              - rust/**/*.rs
              - rust/**/*.toml

  test:
    needs: changed-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        uses: Swatinem/rust-cache@v2.7.3
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        name: Run Cargo tests
        run: make test language=rust

      - if: needs.changed-files.outputs.bash_any_changed == 'true'
        name: Install bats
        run: sudo apt install bats
      - if: needs.changed-files.outputs.bash_any_changed == 'true'
        name: Run Bats tests
        run: make test language=bash

  style:
    needs: changed-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt,clippy
      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        uses: Swatinem/rust-cache@v2.7.3

      - if: needs.changed-files.outputs.bash_any_changed == 'true'
        uses: mfinelli/setup-shfmt@v3
      - uses: extractions/setup-just@v2

      - name: Install dprint
        shell: bash
        run: |
          curl -fsSL https://dprint.dev/install.sh | sh -s ${{ inputs.dprint-version }} > /dev/null 2>&1
          echo "/home/runner/.dprint/bin" >> $GITHUB_PATH
      - name: Check formatting
        shell: bash
        run: ~/.dprint/bin/dprint check ${{ needs.changed-files.outputs.all_changed_files }}

      - if: needs.changed-files.outputs.rs_any_changed == 'true'
        name: Lint Rust files
        run: cargo clippy --all

      - if: steps.files-changed.outputs.bash_any_changed == 'true'
        name: Lint Bash files
        run: find bash -type f -name "*.bash" ! -name "bats-extra.bash" -exec shellcheck -a {} +
